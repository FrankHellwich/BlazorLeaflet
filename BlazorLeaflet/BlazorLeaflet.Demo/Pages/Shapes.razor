@page "/shapes"
@using BlazorLeaflet.Models.Events
@using BlazorLeaflet.Demo.Data
@inject IJSRuntime JSRuntime

<h1>Blazor Leaflet </h1>

<h3>Drag &amp; drop the Marker!</h3>

<div class="form-inline m-2">
  <div class="form-group mb-2">
    <label>Lat </label>
    <input class="form-control ml-2 mr-2" placeholder="city name" @bind="_markerLatLng.Lat" disabled/>
  </div>

  <div class="form-group mb-2">
    <label>Lng </label>
    <input class="form-control ml-2 mr-2" placeholder="city name" @bind="_markerLatLng.Lng" disabled/>
  </div>
</div>

<div style="height: 500px; width: 500px;">
  <LeafletMap Map="_map"/>
</div>

<div class="pt-3">
  <DrawZoneToggleButton ButtonText="Draw Rectangle" DrawHandler="_drawHandler" OnToggleCallback="_drawHandler.OnDrawRectangleToggle"/>
  <DrawZoneToggleButton ButtonText="Draw Circle" DrawHandler="_drawHandler" OnToggleCallback="_drawHandler.OnDrawCircleToggle"/>
  <DrawZoneToggleButton ButtonText="Draw Polygon" DrawHandler="_drawHandler" OnToggleCallback="_drawHandler.OnDrawPolygonToggle"/>
</div>

@code
{
  private Map? _map;
  private DrawHandler? _drawHandler;

  private LatLng? _markerLatLng = new()
  {
    Lat = 47.5574007f, Lng = 16.3918687f
  };

  protected override void OnInitialized()
  {
    var marker = new Marker(_markerLatLng)
    {
      Draggable = true,
      Title = "Marker 1",
      Popup = new Popup
      {
        Content = $"I am at {_markerLatLng.Lat:0.00}° lat, {_markerLatLng.Lng:0.00}° lng"
      },
      Tooltip = new Tooltip
      {
        Content = "Click and drag to move me"
      }
    };

    _map = new Map(JSRuntime)
    {
      Center = _markerLatLng,
      Zoom = 4.8f
    };

    _map.OnInitialized += () =>
    {
      _map.AddLayer(new TileLayer
      {
        UrlTemplate = "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",
        Attribution = "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors"
      });

      _map.AddLayer(marker);
    };

    _drawHandler = new DrawHandler(_map, JSRuntime);

    marker.OnMove += OnDrag;
    marker.OnMoveEnd += OnDragEnd;
  }

  private void OnDrag(Marker marker, DragEvent evt)
  {
    _markerLatLng = evt.LatLng;
    StateHasChanged();
  }

  private async void OnDragEnd(Marker marker, Event e)
  {
    marker.Position = _markerLatLng;
    marker.Popup.Content = $"I am now at {_markerLatLng.Lat:0.00}° lat, {_markerLatLng.Lng:0.00}° lng";
    await LeafletInterops.UpdatePopupContent(JSRuntime, _map.Id, marker);
  }
}